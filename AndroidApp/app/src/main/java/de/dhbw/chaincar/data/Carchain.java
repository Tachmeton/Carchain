package de.dhbw.chaincar.data;

import android.util.Log;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;

import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Carchain extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b5060006103e981905550614154806100296000396000f3fe6080604052600436106101405760003560e01c80638718323e116100b6578063c70676451161006f578063c7067645146108f6578063cb8ad4511461093a578063da051f491461099f578063e2cc37f114610a69578063f8d14ebe14610ace578063fa54416114610da457610140565b80638718323e146106b25780639bc3124e146107255780639f08a3e514610778578063a4e88cf3146107dd578063ad4162ae14610842578063ba9b5ae6146108cb57610140565b8063539f565011610108578063539f5650146103d35780635e3c7e8d1461049d5780636204d12f146104ee5780636aa7a8541461055757806371e4ec9c146105bc57806384f9f1981461064d57610140565b80631270e5721461014557806317eabd88146101965780632361a67d146102605780633c00d62c146102a45780634400c8471461036e575b600080fd5b34801561015157600080fd5b506101946004803603602081101561016857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e35565b005b3480156101a257600080fd5b506101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022557808201518184015260208101905061020a565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a26004803603602081101561027657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611478565b005b3480156102b057600080fd5b506102f3600480360360208110156102c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117d2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610333578082015181840152602081019050610318565b50505050905090810190601f1680156103605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037a57600080fd5b506103bd6004803603602081101561039157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119bb565b6040518082815260200191505060405180910390f35b3480156103df57600080fd5b50610422600480360360208110156103f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b0c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104a957600080fd5b506104ec600480360360208110156104c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cf5565b005b3480156104fa57600080fd5b5061053d6004803603602081101561051157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fa8565b604051808215151515815260200191505060405180910390f35b34801561056357600080fd5b506105a66004803603602081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612183565b6040518082815260200191505060405180910390f35b3480156105c857600080fd5b5061060b600480360360208110156105df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065957600080fd5b5061069c6004803603602081101561067057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612445565b6040518082815260200191505060405180910390f35b3480156106be57600080fd5b50610701600480360360208110156106d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612596565b6040518082600281111561071157fe5b60ff16815260200191505060405180910390f35b34801561073157600080fd5b5061073a6126f4565b6040518082606460200280838360005b8381101561076557808201518184015260208101905061074a565b5050505090500191505060405180910390f35b34801561078457600080fd5b506107c76004803603602081101561079b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128e7565b6040518082815260200191505060405180910390f35b3480156107e957600080fd5b5061082c6004803603602081101561080057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a38565b6040518082815260200191505060405180910390f35b34801561084e57600080fd5b506108b16004803603604081101561086557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b89565b604051808215151515815260200191505060405180910390f35b3480156108d757600080fd5b506108e0612e38565b6040518082815260200191505060405180910390f35b6109386004803603602081101561090c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e40565b005b34801561094657600080fd5b506109896004803603602081101561095d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061332c565b6040518082815260200191505060405180910390f35b3480156109ab57600080fd5b506109ee600480360360208110156109c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061347d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a2e578082015181840152602081019050610a13565b50505050905090810190601f168015610a5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a7557600080fd5b50610ab860048036036020811015610a8c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613666565b6040518082815260200191505060405180910390f35b348015610ada57600080fd5b50610da26004803603610120811015610af257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610b2f57600080fd5b820183602082011115610b4157600080fd5b80359060200191846001830284011164010000000083111715610b6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610bc657600080fd5b820183602082011115610bd857600080fd5b80359060200191846001830284011164010000000083111715610bfa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c5d57600080fd5b820183602082011115610c6f57600080fd5b80359060200191846001830284011164010000000083111715610c9157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610cf457600080fd5b820183602082011115610d0657600080fd5b80359060200191846001830284011164010000000083111715610d2857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919080359060200190929190803590602001909291905050506137b7565b005b348015610db057600080fd5b50610df360048036036020811015610dc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613b99565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b81338073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420746865207269676874206f776e6572206f6620746865204361722e0081525060200191505060405180910390fd5b836000600281111561104c57fe5b61105582612596565b600281111561106057fe5b146110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f436172206973206e6f7420667265652e0000000000000000000000000000000081525060200191505060405180910390fd5b60008090506110e186613d0a565b90508573ffffffffffffffffffffffffffffffffffffffff166001826103e8811061110857fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111645761114f81613de7565b6103e960008154809291906001900391905055505b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160009055600482016000905560058201600090556006820160006112359190613ef7565b6007820160006112459190613ef7565b6008820160006112559190613ef7565b6009820160006112659190613ef7565b600a820160009055600b820160009055600c820160009055600d8201600090555050505050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611396576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561146b5780601f106114405761010080835404028352916020019161146b565b820191906000526020600020905b81548152906001019060200180831161144e57829003601f168201915b5050505050915050919050565b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561157d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b816001600281111561158b57fe5b61159482612596565b600281111561159f57fe5b14611612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436172206973206e6f74204c656173656400000000000000000000000000000081525060200191505060405180910390fd5b82338073ffffffffffffffffffffffffffffffffffffffff16611634836122d4565b73ffffffffffffffffffffffffffffffffffffffff16146116bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420746865207269676874204c6561736572206f6620746865204361722e81525060200191505060405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060016000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083600281111561176257fe5b02179055506000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119ae5780601f10611983576101008083540402835291602001916119ae565b820191906000526020600020905b81548152906001019060200180831161199157829003601f168201915b5050505050915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611ac2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d0154915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ce85780601f10611cbd57610100808354040283529160200191611ce8565b820191906000526020600020905b815481529060010190602001808311611ccb57829003601f168201915b5050505050915050919050565b611cfd613f3f565b604051806101e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611d3257fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160008152602001600081526020016000815260200160008152509050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115611e8a57fe5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006019080519060200190611f1a929190613fec565b50610100820151816007019080519060200190611f38929190613fec565b50610120820151816008019080519060200190611f56929190613fec565b50610140820151816009019080519060200190611f74929190613fec565b5061016082015181600a015561018082015181600b01556101a082015181600c01556101c082015181600d01559050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156120af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561216a57506000600281111561215457fe5b61215d84612596565b600281111561216857fe5b145b15612178576001915061217d565b600091505b50919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561228a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561254c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600c0154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561269d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16915050919050565b6126fc61406c565b61270461406c565b600080905060008090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103e8146128de575b6103e8821080156127495750606481105b156128dd57600073ffffffffffffffffffffffffffffffffffffffff166000806001856103e8811061277757fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561284f575061284e6001836103e8811061282757fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611fa8565b5b156128d0576001826103e8811061286257fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683826064811061289057fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150505b8180600101925050612738565b5b82935050505090565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154915050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b8360016002811115612c9e57fe5b612ca782612596565b6002811115612cb257fe5b14612d25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436172206973206e6f74204c656173656400000000000000000000000000000081525060200191505060405180910390fd5b84848073ffffffffffffffffffffffffffffffffffffffff16612d47836122d4565b73ffffffffffffffffffffffffffffffffffffffff1614612dd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420746865207269676874204c6561736572206f6620746865204361722e81525060200191505060405180910390fd5b612dd8612e38565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541015612e295760019450612e2e565b600094505b5050505092915050565b600042905090565b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612f45576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b8160006002811115612f5357fe5b612f5c82612596565b6002811115612f6757fe5b14612fda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f436172206973206e6f7420667265652e0000000000000000000000000000000081525060200191505060405180910390fd5b6108fc341015613035576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806140b56027913960400191505060405180910390fd5b6108fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d01546000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b01540201341015613116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260448152602001806140dc6044913960600191505060405180910390fd5b346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008390508073ffffffffffffffffffffffffffffffffffffffff166108fc8034039081150290604051600060405180830381858888f193505050501580156131a9573d6000803e3d6000fd5b5060016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083600281111561320857fe5b0217905550336000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b015434816132d757fe5b046132e0612e38565b016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613433576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0154915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613584576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206008018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156136595780601f1061362e57610100808354040283529160200191613659565b820191906000526020600020905b81548152906001019060200180831161363c57829003601f168201915b5050505050915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561376d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146138ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f494420616c726561647920757365642e0000000000000000000000000000000081525060200191505060405180910390fd5b6138c2613f3f565b604051806101e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156138f757fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020018a81526020018981526020018881526020018781526020018681526020018581526020018481526020018381525090508960016103e9546103e8811061397757fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e960008154809291906001019190505550806000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115613a7357fe5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006019080519060200190613b03929190613fec565b50610100820151816007019080519060200190613b21929190613fec565b50610120820151816008019080519060200190613b3f929190613fec565b50610140820151816009019080519060200190613b5d929190613fec565b5061016082015181600a015561018082015181600b01556101a082015181600c01556101c082015181600d015590505050505050505050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613ca0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103e814613dbe5760008090505b6103e8811015613dbc578273ffffffffffffffffffffffffffffffffffffffff166001826103e88110613d6a57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613db15780915050613de2565b806001019050613d3b565b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b6103e9548110613df657613ef4565b60016103e9541415613e3a57600160006103e88110613e1157fe5b0160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055613ef4565b6001806103e954036103e88110613e4d57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826103e88110613e7d57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001806103e954036103e88110613ecf57fe5b0160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b50805460018160011615610100020316600290046000825580601f10613f1d5750613f3c565b601f016020900490600052602060002090810190613f3b919061408f565b5b50565b604051806101e00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115613f7557fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061402d57805160ff191683800117855561405b565b8280016001018555821561405b579182015b8281111561405a57825182559160200191906001019061403f565b5b509050614068919061408f565b5090565b60405180610c800160405280606490602082028038833980820191505090505090565b6140b191905b808211156140ad576000816000905550600101614095565b5090565b9056fe596f7520646964206e6f742070617920656e6f7567682e20284d696e696d756d3a203233303029596f7520646964206e6f7420706179206d6f7265207468616e206d696e204475726174696f6e206f662052656e74202a2072656e74616c207072696365202b2032333030a265627a7a72315820bf24cb06a253d0e38fa2ef024bad59ed1c3cd2152deb8d3430b4dac4952ce45664736f6c63430005100032";

    public static final String FUNC_ADDCAR = "addCar";

    public static final String FUNC_REMOVECAR = "removeCar";

    public static final String FUNC_RENTCAR = "rentCar";

    public static final String FUNC_MAYRENT = "mayRent";

    public static final String FUNC_ISLEGALLEASER = "isLegalLeaser";

    public static final String FUNC_RETURNCARTOCARPOOL = "returnCarToCarpool";

    public static final String FUNC_GETAVAILABLEVEHICLES = "getAvailableVehicles";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETCURRENTSTATE = "getCurrentState";

    public static final String FUNC_GETLEASER = "getLeaser";

    public static final String FUNC_GETTIMERENTED = "getTimeRented";

    public static final String FUNC_GETLATITUDE = "getLatitude";

    public static final String FUNC_GETLONGITUDE = "getLongitude";

    public static final String FUNC_GETNUMMERNSCHILD = "getNummernschild";

    public static final String FUNC_GETTYP = "getTyp";

    public static final String FUNC_GETHERSTELLER = "getHersteller";

    public static final String FUNC_GETFARBE = "getFarbe";

    public static final String FUNC_GETPS = "getPs";

    public static final String FUNC_GETMIETPREIS = "getMietpreis";

    public static final String FUNC_GETMAXMIETDAUER = "getMaxMietdauer";

    public static final String FUNC_GETMINMIETDAUER = "getMinMietdauer";

    public static final String FUNC_RESETCAR = "resetCar";

    public static final String FUNC_GETTIMENOW = "getTimeNow";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0xdb268b971C46d61bd512071D57706dEADe11369B");
    }

    @Deprecated
    protected Carchain(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Carchain(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Carchain(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Carchain(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> addCar(String identifierCar, String nummernschild, String typ, String hersteller, String farbe, BigInteger ps, BigInteger mietpreis, BigInteger maxMietdauer, BigInteger minMietdauer) {
        final Function function = new Function(
                FUNC_ADDCAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar), 
                new org.web3j.abi.datatypes.Utf8String(nummernschild), 
                new org.web3j.abi.datatypes.Utf8String(typ), 
                new org.web3j.abi.datatypes.Utf8String(hersteller), 
                new org.web3j.abi.datatypes.Utf8String(farbe), 
                new org.web3j.abi.datatypes.generated.Uint256(ps), 
                new org.web3j.abi.datatypes.generated.Uint256(mietpreis), 
                new org.web3j.abi.datatypes.generated.Uint256(maxMietdauer), 
                new org.web3j.abi.datatypes.generated.Uint256(minMietdauer)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeCar(String identifierCar) {
        final Function function = new Function(
                FUNC_REMOVECAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> rentCar(String identifierCar, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_RENTCAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<Boolean> mayRent(String identifierCar) {
        final Function function = new Function(FUNC_MAYRENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isLegalLeaser(String identifierCar, String identifierLeaser) {
        final Function function = new Function(FUNC_ISLEGALLEASER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar), 
                new org.web3j.abi.datatypes.Address(identifierLeaser)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> returnCarToCarpool(String identifierCar, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_RETURNCARTOCARPOOL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<List> getAvailableVehicles() {
        final Function function = new Function(FUNC_GETAVAILABLEVEHICLES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray<Address>>() {}));

        return new RemoteCall<List>(new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        Log.d("Carchain.getAvailableVehicles.call()", "found result: " + result);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<String> getOwner(String identifierCar) {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getCurrentState(String identifierCar) {
        final Function function = new Function(FUNC_GETCURRENTSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getLeaser(String identifierCar) {
        final Function function = new Function(FUNC_GETLEASER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getTimeRented(String identifierCar) {
        final Function function = new Function(FUNC_GETTIMERENTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getLatitude(String identifierCar) {
        final Function function = new Function(FUNC_GETLATITUDE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getLongitude(String identifierCar) {
        final Function function = new Function(FUNC_GETLONGITUDE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getNummernschild(String identifierCar) {
        final Function function = new Function(FUNC_GETNUMMERNSCHILD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getTyp(String identifierCar) {
        final Function function = new Function(FUNC_GETTYP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getHersteller(String identifierCar) {
        final Function function = new Function(FUNC_GETHERSTELLER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getFarbe(String identifierCar) {
        final Function function = new Function(FUNC_GETFARBE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getPs(String identifierCar) {
        final Function function = new Function(FUNC_GETPS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getMietpreis(String identifierCar) {
        final Function function = new Function(FUNC_GETMIETPREIS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getMaxMietdauer(String identifierCar) {
        final Function function = new Function(FUNC_GETMAXMIETDAUER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getMinMietdauer(String identifierCar) {
        final Function function = new Function(FUNC_GETMINMIETDAUER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> resetCar(String identifierCar) {
        final Function function = new Function(
                FUNC_RESETCAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getTimeNow() {
        final Function function = new Function(FUNC_GETTIMENOW, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static Carchain load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Carchain(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Carchain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Carchain(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Carchain load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Carchain(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Carchain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Carchain(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Carchain> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Carchain.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Carchain> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Carchain.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Carchain> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Carchain.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Carchain> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Carchain.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
