package de.dhbw.chaincar.data;


import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Carchain extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b5060006103e98190555061411d806100296000396000f3fe6080604052600436106101355760003560e01c80638718323e116100ab578063c70676451161006f578063c7067645146108c0578063cb8ad45114610904578063da051f4914610969578063e2cc37f114610a33578063f8d14ebe14610a98578063fa54416114610d6e57610135565b80638718323e146106a75780639bc3124e1461071a5780639f08a3e51461076d578063a4e88cf3146107d2578063ad4162ae1461083757610135565b8063539f5650116100fd578063539f5650146103c85780635e3c7e8d146104925780636204d12f146104e35780636aa7a8541461054c57806371e4ec9c146105b157806384f9f1981461064257610135565b80631270e5721461013a57806317eabd881461018b5780632361a67d146102555780633c00d62c146102995780634400c84714610363575b600080fd5b34801561014657600080fd5b506101896004803603602081101561015d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dff565b005b34801561019757600080fd5b506101da600480360360208110156101ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611259565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021a5780820151818401526020810190506101ff565b50505050905090810190601f1680156102475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102976004803603602081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611442565b005b3480156102a557600080fd5b506102e8600480360360208110156102bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061179c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032857808201518184015260208101905061030d565b50505050905090810190601f1680156103555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036f57600080fd5b506103b26004803603602081101561038657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611985565b6040518082815260200191505060405180910390f35b3480156103d457600080fd5b50610417600480360360208110156103eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045757808201518184015260208101905061043c565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049e57600080fd5b506104e1600480360360208110156104b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cbf565b005b3480156104ef57600080fd5b506105326004803603602081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f72565b604051808215151515815260200191505060405180910390f35b34801561055857600080fd5b5061059b6004803603602081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061214d565b6040518082815260200191505060405180910390f35b3480156105bd57600080fd5b50610600600480360360208110156105d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061229e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064e57600080fd5b506106916004803603602081101561066557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061240f565b6040518082815260200191505060405180910390f35b3480156106b357600080fd5b506106f6600480360360208110156106ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612560565b6040518082600281111561070657fe5b60ff16815260200191505060405180910390f35b34801561072657600080fd5b5061072f6126be565b6040518082606460200280838360005b8381101561075a57808201518184015260208101905061073f565b5050505090500191505060405180910390f35b34801561077957600080fd5b506107bc6004803603602081101561079057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128b1565b6040518082815260200191505060405180910390f35b3480156107de57600080fd5b50610821600480360360208110156107f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a02565b6040518082815260200191505060405180910390f35b34801561084357600080fd5b506108a66004803603604081101561085a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b53565b604051808215151515815260200191505060405180910390f35b610902600480360360208110156108d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e01565b005b34801561091057600080fd5b506109536004803603602081101561092757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132ed565b6040518082815260200191505060405180910390f35b34801561097557600080fd5b506109b86004803603602081101561098c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061343e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109f85780820151818401526020810190506109dd565b50505050905090810190601f168015610a255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a3f57600080fd5b50610a8260048036036020811015610a5657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613627565b6040518082815260200191505060405180910390f35b348015610aa457600080fd5b50610d6c6004803603610120811015610abc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610af957600080fd5b820183602082011115610b0b57600080fd5b80359060200191846001830284011164010000000083111715610b2d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b9057600080fd5b820183602082011115610ba257600080fd5b80359060200191846001830284011164010000000083111715610bc457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c2757600080fd5b820183602082011115610c3957600080fd5b80359060200191846001830284011164010000000083111715610c5b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610cbe57600080fd5b820183602082011115610cd057600080fd5b80359060200191846001830284011164010000000083111715610cf257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019092919080359060200190929190505050613778565b005b348015610d7a57600080fd5b50610dbd60048036036020811015610d9157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613b5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b81338073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611008576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420746865207269676874206f776e6572206f6620746865204361722e0081525060200191505060405180910390fd5b836000600281111561101657fe5b61101f82612560565b600281111561102a57fe5b1461109d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f436172206973206e6f7420667265652e0000000000000000000000000000000081525060200191505060405180910390fd5b60008090506110ab86613ccb565b90508573ffffffffffffffffffffffffffffffffffffffff166001826103e881106110d257fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561112e5761111981613da8565b6103e960008154809291906001900391905055505b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160009055600482016000905560058201600090556006820160006111ff9190613ec0565b60078201600061120f9190613ec0565b60088201600061121f9190613ec0565b60098201600061122f9190613ec0565b600a820160009055600b820160009055600c820160009055600d8201600090555050505050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611360576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114355780601f1061140a57610100808354040283529160200191611435565b820191906000526020600020905b81548152906001019060200180831161141857829003601f168201915b5050505050915050919050565b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611547576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b816001600281111561155557fe5b61155e82612560565b600281111561156957fe5b146115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436172206973206e6f74204c656173656400000000000000000000000000000081525060200191505060405180910390fd5b82338073ffffffffffffffffffffffffffffffffffffffff166115fe8361229e565b73ffffffffffffffffffffffffffffffffffffffff1614611687576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420746865207269676874204c6561736572206f6620746865204361722e81525060200191505060405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060016000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083600281111561172c57fe5b02179055506000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119785780601f1061194d57610100808354040283529160200191611978565b820191906000526020600020905b81548152906001019060200180831161195b57829003601f168201915b5050505050915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611a8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d0154915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bdd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cb25780601f10611c8757610100808354040283529160200191611cb2565b820191906000526020600020905b815481529060010190602001808311611c9557829003601f168201915b5050505050915050919050565b611cc7613f08565b604051806101e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611cfc57fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160008152602001600081526020016000815260200160008152509050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115611e5457fe5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006019080519060200190611ee4929190613fb5565b50610100820151816007019080519060200190611f02929190613fb5565b50610120820151816008019080519060200190611f20929190613fb5565b50610140820151816009019080519060200190611f3e929190613fb5565b5061016082015181600a015561018082015181600b01556101a082015181600c01556101c082015181600d01559050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612079576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561213457506000600281111561211e57fe5b61212784612560565b600281111561213257fe5b145b156121425760019150612147565b600091505b50919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612254576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612516576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600c0154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612667576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16915050919050565b6126c6614035565b6126ce614035565b600080905060008090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103e8146128a8575b6103e8821080156127135750606481105b156128a757600073ffffffffffffffffffffffffffffffffffffffff166000806001856103e8811061274157fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561281957506128186001836103e881106127f157fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f72565b5b1561289a576001826103e8811061282c57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683826064811061285a57fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150505b8180600101925050612702565b5b82935050505090565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154915050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b8360016002811115612c6857fe5b612c7182612560565b6002811115612c7c57fe5b14612cef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436172206973206e6f74204c656173656400000000000000000000000000000081525060200191505060405180910390fd5b84848073ffffffffffffffffffffffffffffffffffffffff16612d118361229e565b73ffffffffffffffffffffffffffffffffffffffff1614612d9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420746865207269676874204c6561736572206f6620746865204361722e81525060200191505060405180910390fd5b612da2613eb8565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015410612df25760019450612df7565b600094505b5050505092915050565b80600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612f06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b8160006002811115612f1457fe5b612f1d82612560565b6002811115612f2857fe5b14612f9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f436172206973206e6f7420667265652e0000000000000000000000000000000081525060200191505060405180910390fd5b6108fc341015612ff6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061407e6027913960400191505060405180910390fd5b6108fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d01546000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b015402013410156130d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260448152602001806140a56044913960600191505060405180910390fd5b346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008390508073ffffffffffffffffffffffffffffffffffffffff166108fc8034039081150290604051600060405180830381858888f1935050505015801561316a573d6000803e3d6000fd5b5060016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff021916908360028111156131c957fe5b0217905550336000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0154348161329857fe5b046132a1613eb8565b016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0154915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613545576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206008018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561361a5780601f106135ef5761010080835404028352916020019161361a565b820191906000526020600020905b8154815290600101906020018083116135fd57829003601f168201915b5050505050915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561372e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461387b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f494420616c726561647920757365642e0000000000000000000000000000000081525060200191505060405180910390fd5b613883613f08565b604051806101e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156138b857fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020018a81526020018981526020018881526020018781526020018681526020018581526020018481526020018381525090508960016103e9546103e8811061393857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e960008154809291906001019190505550806000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115613a3457fe5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006019080519060200190613ac4929190613fb5565b50610100820151816007019080519060200190613ae2929190613fb5565b50610120820151816008019080519060200190613b00929190613fb5565b50610140820151816009019080519060200190613b1e929190613fb5565b5061016082015181600a015561018082015181600b01556101a082015181600c01556101c082015181600d015590505050505050505050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613c61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436172206973206e6f7420696e20636172706f6f6c000000000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6103e814613d7f5760008090505b6103e8811015613d7d578273ffffffffffffffffffffffffffffffffffffffff166001826103e88110613d2b57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613d725780915050613da3565b806001019050613cfc565b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b6103e9548110613db757613eb5565b60016103e9541415613dfb57600160006103e88110613dd257fe5b0160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055613eb5565b6001806103e954036103e88110613e0e57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826103e88110613e3e57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001806103e954036103e88110613e9057fe5b0160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b600042905090565b50805460018160011615610100020316600290046000825580601f10613ee65750613f05565b601f016020900490600052602060002090810190613f049190614058565b5b50565b604051806101e00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115613f3e57fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ff657805160ff1916838001178555614024565b82800160010185558215614024579182015b82811115614023578251825591602001919060010190614008565b5b5090506140319190614058565b5090565b60405180610c800160405280606490602082028038833980820191505090505090565b61407a91905b8082111561407657600081600090555060010161405e565b5090565b9056fe596f7520646964206e6f742070617920656e6f7567682e20284d696e696d756d3a203233303029596f7520646964206e6f7420706179206d6f7265207468616e206d696e204475726174696f6e206f662052656e74202a2072656e74616c207072696365202b2032333030a265627a7a72315820f539db452d181d8c6ddaac271b5c646b8975cee146ef12947c87b1785f2e5fa764736f6c63430005100032";

    public static final String FUNC_ADDCAR = "addCar";

    public static final String FUNC_REMOVECAR = "removeCar";

    public static final String FUNC_RENTCAR = "rentCar";

    public static final String FUNC_MAYRENT = "mayRent";

    public static final String FUNC_ISLEGALLEASER = "isLegalLeaser";

    public static final String FUNC_RETURNCARTOCARPOOL = "returnCarToCarpool";

    public static final String FUNC_GETAVAILABLEVEHICLES = "getAvailableVehicles";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETCURRENTSTATE = "getCurrentState";

    public static final String FUNC_GETLEASER = "getLeaser";

    public static final String FUNC_GETTIMERENTED = "getTimeRented";

    public static final String FUNC_GETLATITUDE = "getLatitude";

    public static final String FUNC_GETLONGITUDE = "getLongitude";

    public static final String FUNC_GETNUMMERNSCHILD = "getNummernschild";

    public static final String FUNC_GETTYP = "getTyp";

    public static final String FUNC_GETHERSTELLER = "getHersteller";

    public static final String FUNC_GETFARBE = "getFarbe";

    public static final String FUNC_GETPS = "getPs";

    public static final String FUNC_GETMIETPREIS = "getMietpreis";

    public static final String FUNC_GETMAXMIETDAUER = "getMaxMietdauer";

    public static final String FUNC_GETMINMIETDAUER = "getMinMietdauer";

    public static final String FUNC_RESETCAR = "resetCar";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0xdb268b971C46d61bd512071D57706dEADe11369B");
    }

    @Deprecated
    protected Carchain(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Carchain(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Carchain(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Carchain(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addCar(String identifierCar, String nummernschild, String typ, String hersteller, String farbe, BigInteger ps, BigInteger mietpreis, BigInteger maxMietdauer, BigInteger minMietdauer) {
        final Function function = new Function(
                FUNC_ADDCAR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar),
                        new org.web3j.abi.datatypes.Utf8String(nummernschild),
                        new org.web3j.abi.datatypes.Utf8String(typ),
                        new org.web3j.abi.datatypes.Utf8String(hersteller),
                        new org.web3j.abi.datatypes.Utf8String(farbe),
                        new org.web3j.abi.datatypes.generated.Uint256(ps),
                        new org.web3j.abi.datatypes.generated.Uint256(mietpreis),
                        new org.web3j.abi.datatypes.generated.Uint256(maxMietdauer),
                        new org.web3j.abi.datatypes.generated.Uint256(minMietdauer)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeCar(String identifierCar) {
        final Function function = new Function(
                FUNC_REMOVECAR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> rentCar(String identifierCar, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_RENTCAR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<Boolean> mayRent(String identifierCar) {
        final Function function = new Function(FUNC_MAYRENT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isLegalLeaser(String identifierCar, String identifierLeaser) {
        final Function function = new Function(FUNC_ISLEGALLEASER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar),
                        new org.web3j.abi.datatypes.Address(identifierLeaser)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> returnCarToCarpool(String identifierCar, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_RETURNCARTOCARPOOL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<List> getAvailableVehicles() {
        final Function function = new Function(FUNC_GETAVAILABLEVEHICLES,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> getOwner(String identifierCar) {
        final Function function = new Function(FUNC_GETOWNER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getCurrentState(String identifierCar) {
        final Function function = new Function(FUNC_GETCURRENTSTATE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getLeaser(String identifierCar) {
        final Function function = new Function(FUNC_GETLEASER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getTimeRented(String identifierCar) {
        final Function function = new Function(FUNC_GETTIMERENTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getLatitude(String identifierCar) {
        final Function function = new Function(FUNC_GETLATITUDE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getLongitude(String identifierCar) {
        final Function function = new Function(FUNC_GETLONGITUDE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getNummernschild(String identifierCar) {
        final Function function = new Function(FUNC_GETNUMMERNSCHILD,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getTyp(String identifierCar) {
        final Function function = new Function(FUNC_GETTYP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getHersteller(String identifierCar) {
        final Function function = new Function(FUNC_GETHERSTELLER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getFarbe(String identifierCar) {
        final Function function = new Function(FUNC_GETFARBE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getPs(String identifierCar) {
        final Function function = new Function(FUNC_GETPS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getMietpreis(String identifierCar) {
        final Function function = new Function(FUNC_GETMIETPREIS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getMaxMietdauer(String identifierCar) {
        final Function function = new Function(FUNC_GETMAXMIETDAUER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getMinMietdauer(String identifierCar) {
        final Function function = new Function(FUNC_GETMINMIETDAUER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> resetCar(String identifierCar) {
        final Function function = new Function(
                FUNC_RESETCAR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(identifierCar)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Carchain load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Carchain(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Carchain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Carchain(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Carchain load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Carchain(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Carchain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Carchain(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Carchain> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Carchain.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Carchain> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Carchain.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Carchain> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Carchain.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Carchain> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Carchain.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
